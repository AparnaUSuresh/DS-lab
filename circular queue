#include<stdio.h>
# define MAX 5
void enqueue();
void dequeue();
void search();
void display();
int c,queue[50],item,front=-1,rear=-1,i,n,flag=0;

void main()
{
    do
    {
        printf("\n1.Insertion\n2.Deletion\n3.Search\n4.Display\n5.Exit");
        printf("\n Enter the option:");
        scanf("%d",&c);
        switch(c)
        {
            case 1:
            enqueue();
            break;
            case 2:
            dequeue();
            break;
            case 3:
            search();
            break;
            case 4:
            display();
            break;
            case 5:
            printf("Exit");
            break;
            default:
            printf("\n Enter a valid option");
            
        }
        
    }while(c!=5);
}
void enqueue()
{
    if ((rear+1)%MAX==front)
    {
        printf("Queue over flow");
    }
    else
    {
        if(rear==-1)
        front=0;
        printf("\n Enter the element to insert:");
        scanf("%d",&item);
        rear=(rear+1)%MAX;
        queue[rear]=item;
    }
}
void dequeue()
{
    if(front==-1)
    {
        printf("QUEUE UNDERFLOW");
    }
    else if(front==rear)
    {
        printf("The deleted elemnt is %d",queue[front]);
        front=rear=-1;
    }
    else
    {
        printf("\nThe deleted element is:%d\n",queue[front]);
        front=(front+1)%MAX;
    }
}
void search()
{
    printf("\n Enter the value to be search:");
    scanf("%d",&n);
    if(front==-1)
    {
        printf("QUEUE UNDERFLOW");
    }
    else
    {
        int front_pos=front,rear_pos=rear;
        if(front_pos>rear_pos)
        {
            while(front_pos>rear_pos)
            {
                if(queue[front_pos]==n)
                {
                    flag=1;
                    break;
                }
                front_pos=((front_pos+1))%MAX;
            }
        }
    
     if(front_pos<=rear_pos)
     {
        for(i=front_pos;i<=rear_pos;i++)
        {
            if(queue[i]==n)
            {
                flag=1;
                break;
            }
        }
     }
   }
  if(flag==1)
  printf("\n Element is found");
  else
  printf("\n Element is not found");
}
void display()
{
    if(front==-1)
    {
        printf("\n QUEUE UNDERFLOW");
    }
    else
    {
          printf(".......................................");
          int front_pos=front,rear_pos=rear;
        if(front_pos>rear_pos)
        {
            while(front_pos>rear_pos)
            {
                printf("%d\n",queue[front_pos]);
                front_pos=((front_pos+1))%MAX;
            }
        }
    
     if(front_pos<=rear_pos)
     {
        for(i=front_pos;i<=rear_pos;i++)
        printf("%d\n",queue[i]);
     }
    }
}
