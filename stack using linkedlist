#include<stdio.h>
#include<stdlib.h>
#include<stdbool.h>
struct node
{
    int data;
    struct node *next;
};
typedef struct node node;
node *head;

void push()
{
    int data;  
    node *temp,*pre;
    printf("\n Enter the value:");
    scanf("%d",&data);
    temp=(node *)malloc(sizeof(node));
    temp->data=data;
    
    if (head==NULL)
    {
        head=temp;
        head->next=NULL;
    }
    else
    {
        pre=head;
        while(pre->next !=NULL)
        {
            pre=pre->next;
        }
        pre->next=temp;
        temp->next=NULL;
    }
}

void pop()
{
    node *temp;
    temp=head;
    if(head==NULL)
    {
        printf("\nStack is empty");
        
    }
    else
    {
        while(temp->next->next !=NULL)
        {
            temp=temp->next;
        }
        temp->next=NULL;
    }
}

void peek()
{
    node *temp;
    int count=1;
    temp=head;
    if(head==NULL)
    {
        printf("\nStack is empty");
        
    }
    else
    {
        while(temp->next !=NULL)
        {
            temp=temp->next;
            count++;
        }
        printf("\nStack[%d]:%d\n",count,temp->data);
    }
}

void display()
{
    node*temp;
    int count=1;
    temp=head;
    if(head==NULL)
    {
        printf("\n List is empty");
    }
    else
    {
        while(temp->next !=NULL)
        {
        printf("List[%d]:%d\n",count,temp->data);
        temp=temp->next;
        count++;
            
        }
    
        printf("List[%d]:%d\n",count,temp->data);
        
    }
}

int main()
{
    int ch;
    do{
        printf("\n1.PUSH\n2.POP\n3.DISPLAY\n4.QUIT");
        printf("\n Choose your option:");
        scanf("%d",&ch);
        switch(ch)
        {
            case 1:
            push();
            break;
            case 2:
            pop();
            break;
            case 3:
            display();
            break;
            case 4:
            exit(0);
            default:
            printf("\n Invalid option");
            
        }
    }
    while(1);
    return 0;
}
